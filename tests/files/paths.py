from os.path import abspath, dirname, join

from gaiaxpy.core.generic_functions import str_to_array

files_path = abspath(join(dirname(__file__)))
output_path = 'tests_output_files'  # Store output files generated by the tests in this folder

"""
=======================
  Input spectra files
=======================
"""
# Load XP continuous file
continuous_path = join(files_path, 'xp_continuous')
# Regular mean spectra files
mean_spectrum_avro_file = join(continuous_path, 'MeanSpectrumSolutionWithCov.avro')
mean_spectrum_csv_file = join(continuous_path, 'XP_CONTINUOUS_RAW.csv')
mean_spectrum_ecsv_file = join(continuous_path, 'XP_CONTINUOUS_RAW.ecsv')
mean_spectrum_fits_file = join(continuous_path, 'XP_CONTINUOUS_RAW.fits')
mean_spectrum_xml_file = join(continuous_path, 'XP_CONTINUOUS_RAW.xml')
mean_spectrum_xml_plain_file = join(continuous_path, 'XP_CONTINUOUS_RAW_plain.xml')
# Three sources including the one without BP
with_missing_bp_csv_file = join(continuous_path, 'XP_CONTINUOUS_RAW_with_missing_BP.csv')
with_missing_bp_ecsv_file = join(continuous_path, 'XP_CONTINUOUS_RAW_with_missing_BP.ecsv')
with_missing_bp_fits_file = join(continuous_path, 'XP_CONTINUOUS_RAW_with_missing_BP.fits')
with_missing_bp_xml_file = join(continuous_path, 'XP_CONTINUOUS_RAW_with_missing_BP.xml')
with_missing_bp_xml_plain_file = join(continuous_path, 'XP_CONTINUOUS_RAW_with_missing_BP_plain.xml')
# The missing BP source isolated
missing_bp_csv_file = join(continuous_path, 'XP_CONTINUOUS_RAW_missing_BP_dr3int6.csv')
missing_bp_ecsv_file = join(continuous_path, 'XP_CONTINUOUS_RAW_missing_BP_dr3int6.ecsv')
missing_bp_fits_file = join(continuous_path, 'XP_CONTINUOUS_RAW_missing_BP_dr3int6.fits')
missing_bp_xml_file = join(continuous_path, 'XP_CONTINUOUS_RAW_missing_BP_dr3int6.xml')
missing_bp_xml_plain_file = join(continuous_path, 'XP_CONTINUOUS_RAW_missing_BP_plain_dr3int6.xml')

"""
==================
  Solution paths
==================
"""
output_sol_path = join(files_path, 'output_solution')  # Read the expected solution to compare with the output files
calibrator_sol_path = join(files_path, 'calibrator_solution')
converter_sol_path = join(files_path, 'converter_solution')
generator_sol_path = join(files_path, 'generator_solution')
corrected_errors_solution_path = join(files_path, 'error_correction_solution', 'corrected_errors_solution.csv')

"""
==================================
  Calibrator samplings solutions
==================================
"""
# Default model
sol_default_sampling = join(calibrator_sol_path, 'calibrator_solution_default_sampling.csv')
sol_custom_sampling = join(calibrator_sol_path, 'calibrator_solution_custom_sampling.csv')
# v211w model
sol_v211w_default_sampling = join(calibrator_sol_path, 'calibrator_solution_v211w_default_sampling.csv')
sol_v211w_custom_sampling = join(calibrator_sol_path, 'calibrator_solution_v211w_custom_sampling.csv')
# With missing
sol_with_missing_sampling = join(calibrator_sol_path, 'with_missing_calibrator_solution_sampling.csv')
# With covariance
sol_with_covariance_sampling = join(calibrator_sol_path, 'calibrate_with_covariance_solution_sampling.csv')

"""
================================
  Calibrator spectra solutions
================================
"""
"""
===========================
  Tests regular solutions
===========================
"""
# Calibrator solution converters
calibrator_sol_converters = dict([(column, lambda x: str_to_array(x)) for column in ['flux', 'flux_error']])
# Default model
solution_default_path = join(calibrator_sol_path, 'calibrator_solution_default.csv')
solution_custom_path = join(calibrator_sol_path, 'calibrator_solution_custom.csv')
# v211w model
solution_v211w_default_path = join(calibrator_sol_path, 'calibrator_solution_v211w_default.csv')
solution_v211w_custom_path = join(calibrator_sol_path, 'calibrator_solution_v211w_custom.csv')
# With missing
with_missing_solution_path = join(calibrator_sol_path, 'with_missing_calibrator_solution.csv')
# With truncation
with_truncation_solution_path = join(calibrator_sol_path, 'calibrator_solution_truncation_default.csv')
"""
================================
  Mini files (first test files)
=================================
"""
mini_path = join(files_path, 'mini_files')
mini_csv_file = join(mini_path, 'SPSS_mini.csv')
mini_fits_file = join(mini_path, 'XP_SPECTRA_RAW_mini.fits')
mini_xml_file = join(mini_path, 'XP_SPECTRA_RAW_mini.xml')
no_ext_file = join(files_path, 'no_extension_file')
